// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Blog {
  id        Int     @id @default(autoincrement())
  slug      String  @unique
  title     String  @db.VarChar(255)
  content   String  @db.Text
  published Boolean @default(true)

  tags TagOnBlog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        Int     @id @default(autoincrement())
  slug      String  @unique
  title     String  @db.VarChar(255)
  content   String  @db.Text
  published Boolean @default(true)

  tags TagOnNote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id      Int    @id @default(autoincrement())
  tagName String @unique @db.VarChar(50)

  blogs TagOnBlog[]
  notes TagOnNote[]
}

model TagOnBlog {
  blogId    Int
  tagId     Int
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([blogId, tagId])
}

model TagOnNote {
  noteId    Int
  tagId     Int
  createdAt DateTime @default(now())

  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([noteId, tagId])
}
